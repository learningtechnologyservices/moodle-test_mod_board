{"version":3,"sources":["../src/board.js"],"names":["_serviceCall","method","args","callback","failcallback","Ajax","call","methodname","done","data","fail","error","Notification","exception","isAriaTriggerKey","key","encodeText","rawText","text","html","decodeText","encodedText","handleAction","elem","on","e","type","keyCode","preventDefault","handleEditableAction","callBeforeOnKeyEditing","is","Error","editable","board","options","contextid","strings","default_column_heading","post_button_text","cancel_button_text","remove_note_text","remove_column_text","note_changed_text","note_deleted_text","rate_note_text","Ok","Cancel","warning","modal_title_new","modal_title_edit","option_youtube","option_image","option_link","aria_newcolumn","aria_newpost","aria_deletecolumn","aria_deletepost","aria_addmedia","aria_addmedianew","aria_deleteattachment","aria_postedit","aria_canceledit","aria_postnew","aria_cancelnew","aria_ratepost","invalid_file_extension","invalid_file_size_min","invalid_file_size_max","MEDIA_SELECTION_BUTTONS","ATTACHMENT_IMAGE","SORTBY_DATE","SORTBY_RATING","reloadTimer","lastHistoryId","isEditor","userId","mediaSelection","mediaselection","editingNote","isReadOnlyBoard","readonly","ratingenabled","sortby","editModal","serviceCall","stopUpdating","apply","arguments","updateBoard","getNote","ident","getNoteTextForNote","note","find","getNoteHeadingForNote","getNoteBorderForNote","getNoteAttachmentsForNote","textIdentifierForNote","noteText","noteHeading","noteAttachment","attachmentDataForNote","length","replace","split","slice","join","info","updateNoteAria","noteId","columnIdentifier","closest","noteIdentifier","deleteNoteString","attr","updateColumnAria","columnId","column","newNoteString","deleteColumnString","each","index","stopNoteEdit","remove","noteBorder","show","hide","startNoteEdit","pendingNote","showModalForm","deleteNote","confirm","id","result","status","historyid","rateNote","rating","canrate","sortNotes","then","rateModal","getRoot","ModalEvents","hidden","attachmentTypeChanged","val","attachmentInfo","attachmentUrl","attachmentFile","prop","attachmentTypeToString","FileReader","setAttachment","attachment","attType","url","previewAttachment","filename","filecontents","fileElem","fixEmbedUrlIfNeeded","addClass","removeClass","parseInt","addNote","columnid","heading","content","owner","sortorder","ismynote","iseditable","notecontent","noteAriaText","attachmentPreview","append","columnContent","removeElement","beginEdit","rateElement","lastOne","last","insertAfter","prepend","addColumn","name","notes","nameCache","columnHeader","columnSort","columnName","columnNewContent","hideheaders","toggleFontSize","closeOnEnter","noteicon","userid","timecreated","updateSortable","addNewColumnButton","newBusy","columnicon","boardid","updateNote","processBoardHistory","since","boardhistory","item","JSON","parse","action","formModal","alert","instant","history_refresh","setTimeout","clearTimeout","toggle","sortCol","parent","direction","desc","asc","a","b","sort","appendTo","sortable","connectWith","stop","ui","tocolumn","getBody","noteid","Fragment","loadFragment","updateModalAria","modal","addYoutube","addImage","addLink","postButton","cancelButton","modalRoot","button","getActionSelector","title","ModalFactory","create","types","SAVE_CANCEL","body","large","removeOnClose","getBodyPromise","saveInProgress","setLarge","setSaveButtonText","setButtonText","save","submit","changeEvent","document","createEvent","initEvent","valid","get","reportValidity","element","dispatchEvent","invalid","$","merge","first","focus","formData","stringify","serialize","jsonformdata","Y","use","M","core_formchangechecker","reset_form_dirty_state","destroy","mediaSelect","ytButton","pictureButton","linkButton","updateMediaButtons","init","columns","stringsInfo","string","push","component","when","results"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle the board.\n *\n * @package    mod_board\n * @author     Karen Holland <karen@brickfieldlabs.ie>\n * @copyrigt   2021 Brickfield Education Labs <https://www.brickfield.ie/>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport \"jqueryui\";\nimport {get_strings as getStrings} from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport ModalFactory from \"core/modal_factory\";\nimport ModalEvents from \"core/modal_events\";\nimport Notification from \"core/notification\";\nimport \"mod_board/jquery.editable.amd\";\nimport Fragment from \"core/fragment\";\n\n/**\n * Execute a ajax call to a mod_board ajax service.\n *\n * @method _serviceCall\n * @param method\n * @param args\n * @param callback\n * @param failcallback\n * @private\n */\nconst _serviceCall = function(method, args, callback, failcallback) {\n    Ajax.call([{\n        methodname: 'mod_board_' + method,\n        args: args,\n        done: function(data) {\n            callback(data);\n        },\n        fail: function(error) {\n            Notification.exception(error);\n            if (failcallback) {\n                failcallback(error);\n            }\n        }\n    }]);\n};\n\n/**\n * Indicates if this is a keycode we want to listend to for\n * aria purposes.\n *\n * @method isAriaTriggerKey\n * @param key\n * @returns {boolean}\n */\nconst isAriaTriggerKey = function(key) {\n    return key == 13 || key == 32;\n};\n\n/**\n * Encodes text into html entities.\n *\n * @method encodeText\n * @param rawText\n * @returns {*|jQuery}\n */\nconst encodeText = function(rawText) {\n    return $('<div />').text(rawText).html();\n};\n\n/**\n * Decodes text from html entities.\n *\n * @method decodeText\n * @param encodedText\n * @returns {*|jQuery}\n */\nconst decodeText = function(encodedText) {\n    return $('<div />').html(encodedText).text();\n};\n\n/**\n * Handler for keypress and click actions.\n *\n * $method handleAction\n * @param elem\n * @param callback\n * @returns {*}\n */\nconst handleAction = function(elem, callback) {\n    return elem.on('click keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode)) {\n                e.preventDefault();\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * Setting up element edibility.\n *\n * @method handleEditableAction\n * @param elem\n * @param callback\n * @param callBeforeOnKeyEditing\n * @returns {*}\n */\nconst handleEditableAction = function(elem, callback, callBeforeOnKeyEditing) {\n    if (elem.is(':editable')) {\n        throw new Error('handleEditableAction - must be called before setting the element as editable');\n    }\n\n    // Can't use on(edit) here because we want to do actions (save cache) before the control goes into edit mode\n    return elem.on('dblclick keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode) && !elem.is(':editing')) {\n                e.preventDefault();\n                if (callBeforeOnKeyEditing) {\n                    callback();\n                }\n                elem.editable('open');\n                if (callBeforeOnKeyEditing) {\n                    return;\n                }\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * The default function of the module, which does the setup of the page.\n *\n * @param board\n * @param options\n * @param contextid\n */\nexport default function(board, options, contextid) {\n    // An array of strings to load as a batch later.\n    // Not necessary, but used to load all the strings in one ajax call.\n    var strings = {\n        default_column_heading: '',\n        post_button_text: '',\n        cancel_button_text: '',\n        remove_note_text: '',\n        remove_column_text: '',\n        note_changed_text: '',\n        note_deleted_text: '',\n        rate_note_text: '',\n        Ok: '',\n        Cancel: '',\n        warning: '',\n        modal_title_new: '',\n        modal_title_edit: '',\n        option_youtube: '',\n        option_image: '',\n        option_link: '',\n\n        aria_newcolumn: '',\n        aria_newpost: '',\n        aria_deletecolumn: '',\n        aria_deletepost: '',\n        aria_addmedia: '',\n        aria_addmedianew: '',\n        aria_deleteattachment: '',\n        aria_postedit: '',\n        aria_canceledit: '',\n        aria_postnew: '',\n        aria_cancelnew: '',\n        aria_ratepost: '',\n\n        invalid_file_extension: '',\n        invalid_file_size_min: '',\n        invalid_file_size_max: '',\n    };\n\n    const MEDIA_SELECTION_BUTTONS = 1,\n          ATTACHMENT_VIDEO = 1,\n          ATTACHMENT_IMAGE = 2,\n          ATTACHMENT_LINK = 3,\n          SORTBY_DATE = 1,\n          SORTBY_RATING = 2;\n    var reloadTimer = null,\n        lastHistoryId = null,\n        isEditor = options.isEditor || false,\n        userId = options.userId || -1,\n        mediaSelection = options.mediaselection || MEDIA_SELECTION_BUTTONS,\n        editingNote = 0,\n        isReadOnlyBoard = options.readonly || false,\n        ratingenabled = options.ratingenabled,\n        sortby = options.sortby || SORTBY_DATE,\n        editModal = null;\n    /**\n     * Helper method to make calles to mod_board external services.\n     *\n     * @method serviceCall\n     * @param method\n     * @param args\n     * @param callback\n     * @param failcallback\n     */\n    var serviceCall = function(method, args, callback, failcallback) {\n        if (method !== 'board_history') {\n            stopUpdating();\n        }\n        _serviceCall(method, args, function() {\n            callback.apply(null, arguments);\n            if (method !== 'board_history' && method != 'get_board') {\n                updateBoard(true);\n            }\n        }, failcallback);\n    };\n\n    /**\n     * Returns the jquery element of a given note identifier.\n     *\n     * @method getNote\n     * @param ident\n     * @returns {jQuery|HTMLElement|*}\n     */\n    var getNote = function(ident) {\n        return $(\".board_note[data-ident='\" + ident + \"']\");\n    };\n\n    /**\n     * Returns the jquery element of the note text for the given note element.\n     *\n     * @method getNoteTextForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteTextForNote = function(note) {\n        return $(note).find(\".mod_board_note_text\");\n    };\n\n    /**\n     * Returns the jquery element of the note heading for the given note element.\n     *\n     * @method getNoteHeadingForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteHeadingForNote = function(note) {\n        return $(note).find(\".mod_board_note_heading\");\n    };\n\n    /**\n     * Returns the jquery element of the note border for the given note element.\n     *\n     * @method getNoteBorderForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteBorderForNote = function(note) {\n        return $(note).find(\".mod_board_note_border\");\n    };\n\n    /**\n     * Gets a jquery node for the attachments of a given note.\n     *\n     * @method getNoteAttachmentsForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteAttachmentsForNote = function(note) {\n        return $(note).find(\".mod_board_note_attachment\");\n    };\n\n    /**\n     * Creates text identifier for a given node.\n     *\n     * @method textIdentifierForNote\n     * @param note\n     * @returns {null|*|jQuery}\n     */\n    var textIdentifierForNote = function(note) {\n        var noteText = getNoteTextForNote(note).html(),\n            noteHeading = getNoteHeadingForNote(note).html(),\n            noteAttachment = attachmentDataForNote(note);\n\n        if (noteHeading.length > 0) {\n            return noteHeading;\n        }\n        if (noteText.length > 0) {\n            return noteText.replace(/<br\\s*\\/?>/gi, \" \").replace(/\\n/g, \" \").split(/\\s+/).slice(0, 5).join(\" \");\n        }\n        if (noteAttachment.info && noteAttachment.info.length > 0) {\n            return noteAttachment.info;\n        }\n        return null;\n    };\n\n    /**\n     * Update the Aria info for a given note id.\n     *\n     * @method updateNoteAria\n     * @param noteId\n     */\n    var updateNoteAria = function(noteId) {\n        var note = getNote(noteId),\n            columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text();\n\n        if (noteId) { // New post\n            var noteIdentifier = textIdentifierForNote(note),\n                deleteNoteString = strings.aria_deletepost.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n\n            note.find('.delete_note').attr('aria-label', deleteNoteString).attr('title', deleteNoteString);\n            note.find('.mod_board_rating').attr('aria-label', strings.aria_ratepost.replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier));\n            note.find('.note_ariatext').html(noteIdentifier);\n        }\n\n    };\n\n    /**\n     * Update the Aria information for a given column id.\n     *\n     * @method updateColumnAria\n     * @param columnId\n     */\n    var updateColumnAria = function(columnId) {\n        var column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            newNoteString = strings.aria_newpost.replace('{column}', columnIdentifier),\n            deleteColumnString = strings.aria_deletecolumn.replace('{column}', columnIdentifier);\n        column.find('.newnote').attr('aria-label', newNoteString).attr('title', newNoteString);\n        column.find('.delete_column').attr('aria-label', deleteColumnString).attr('title', deleteColumnString);\n\n        column.find(\".board_note\").each(function(index, note) {\n            updateNoteAria($(note).data('ident'));\n        });\n    };\n\n    /**\n     * Stop the current note editing process.\n     *\n     * @method stopNoteEdit\n     */\n    var stopNoteEdit = function() {\n        if (!editingNote) {\n            getNote(0).remove();\n            return;\n        }\n\n        var note = getNote(editingNote);\n\n        if (note) {\n            var noteHeading = getNoteHeadingForNote(note);\n            var noteText = getNoteTextForNote(note);\n            var noteBorder = getNoteBorderForNote(note);\n\n            // Reset the visibility state.\n            noteHeading.show();\n            noteBorder.show();\n            noteText.show();\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n        }\n\n        editingNote = 0;\n    };\n\n    /**\n     * Start the editing of a particular note, by identifier.\n     *\n     * @method startNoteEdit\n     * @param ident\n     */\n    var startNoteEdit = function(ident) {\n\n        if (editingNote) {\n            if (editingNote == ident) {\n                return;\n            }\n            stopNoteEdit();\n        }\n\n        if (ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = getNote(ident);\n        if (note) {\n            showModalForm(note);\n\n            if (ident) {\n                editingNote = ident;\n            }\n        }\n    };\n\n    /**\n     * Delete a given note, by identifier.\n     *\n     * @method deleteNote\n     * @param ident\n     */\n    var deleteNote = function(ident) {\n        Notification.confirm(\n            strings.remove_note_text.split(\"\\n\")[1], // Are you sure?\n            strings.remove_note_text.split(\"\\n\")[0], // This will effect others.\n            strings.Ok,\n            strings.Cancel,\n            function() {\n                serviceCall('delete_note', {id: ident}, function(result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        getNote(ident).remove();\n                    }\n                });\n            }\n        );\n    };\n\n    /**\n     * Rate (star) a give note, by identifier.\n     *\n     * @method rateNote\n     * @param ident\n     */\n    var rateNote = function(ident) {\n        if (!ratingenabled) {\n            return;\n        }\n        if (isReadOnlyBoard) {\n            return;\n        }\n\n        var note = getNote(ident),\n            rating = note.find('.mod_board_rating');\n        if (rating.data('disabled')) {\n            return;\n        }\n        rating.data('disabled', true);\n\n        serviceCall('can_rate_note', {id: ident}, function(canrate) {\n            if (canrate) {\n                Notification.confirm(\n                    strings.rate_note_text, // Are you sure?\n                    null,\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('rate_note', {id: ident}, function(result) {\n                            if (result.status) {\n                                lastHistoryId = result.historyid;\n                                rating.html(result.rating);\n                                if (sortby == SORTBY_RATING) {\n                                    sortNotes(note.closest('.board_column_content'));\n                                }\n                            }\n                            rating.data('disabled', false);\n                        });\n                    }\n                ).then(function(rateModal) {\n                    // Do this here, because it catches both cancel clicks, or someone clicking the X.\n                    rateModal.getRoot().on(ModalEvents.hidden, function() {\n                        rating.data('disabled', false);\n                    });\n                });\n            }\n        });\n    };\n\n    /**\n     * Update the attachment information of a note.\n     *\n     * @method attachmentTypeChanged\n     * @param note\n     */\n    var attachmentTypeChanged = function(note) {\n        var noteAttachment = getNoteAttachmentsForNote(note),\n            type = noteAttachment.find('.mod_board_type').val(),\n            attachmentInfo = noteAttachment.find('.info'),\n            attachmentUrl = noteAttachment.find('.url'),\n            attachmentFile = noteAttachment.find('.mod_board_file');\n\n        if (type > \"0\") {\n            attachmentInfo.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_info']);\n            attachmentUrl.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_url']);\n\n            attachmentInfo.show();\n            if (type == ATTACHMENT_IMAGE && FileReader) {\n                attachmentFile.show();\n                attachmentUrl.hide();\n            } else {\n                attachmentFile.hide();\n                attachmentUrl.show();\n            }\n        } else {\n            attachmentInfo.hide();\n            attachmentUrl.hide();\n            attachmentFile.hide();\n\n            attachmentInfo.val('');\n            attachmentUrl.val('');\n\n        }\n    };\n\n    /**\n     * Set the attachment of a note.\n     *\n     * @method setAttachment\n     * @param note\n     * @param attachment\n     */\n    var setAttachment = function(note, attachment) {\n        var noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment) {\n            if (!attachment) {\n                attachment = {type: \"0\"};\n            } else {\n                attachment.type += \"\";// Just in case\n            }\n            var attType = noteAttachment.find('.mod_board_type');\n            attType.val(attachment.type ? attachment.type : \"0\");\n            if (attType.val() > \"0\") {\n                noteAttachment.find('.info').val(decodeText(attachment.info));\n                noteAttachment.find('.url').val(decodeText(attachment.url));\n            }\n            attachmentTypeChanged(note, attachment);\n        }\n        previewAttachment(note, attachment);\n    };\n\n    /**\n     * Returns an object with various information about a note's attachment.\n     *\n     * @method attachmentDataForNote\n     * @param note\n     * @returns {{filename: null, filecontents: null, type: number, url: null, info: null}}\n     */\n    var attachmentDataForNote = function(note) {\n        var attachment = {type: 0, info: null, url: null, filename: null, filecontents: null},\n            noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment.length) {\n            attachment.type = noteAttachment.find('.mod_board_type').val();\n            attachment.info = encodeText(noteAttachment.find('.info').val());\n            attachment.url = encodeText(noteAttachment.find('.url').val());\n            var fileElem = noteAttachment.find('.mod_board_file>input');\n            if (fileElem.data('filename')) {\n                attachment.filename = fileElem.data('filename');\n                attachment.filecontents = fileElem.data('filecontents');\n            }\n        }\n        if ((!attachment.info || !attachment.info.length) && (!attachment.url || !attachment.url.length) &&\n            (!attachment.filename)) {\n            attachment.type = 0;\n        }\n\n        return attachment;\n    };\n\n    /**\n     * Get the string type of a attachment type number.\n     *\n     * @method attachmentTypeToString\n     * @param type\n     * @returns {string|null}\n     */\n    var attachmentTypeToString = function(type) {\n        switch (type) {\n            case \"1\": return 'youtube';\n            case \"2\": return 'image';\n            case \"3\": return 'link';\n            default: return null;\n        }\n    };\n\n    /**\n     * Display the attachment preview for a note.\n     *\n     * @method previewAttachment\n     * @param note\n     * @param attachment\n     */\n    var previewAttachment = function(note, attachment) {\n        var elem = note.find('.mod_board_preview');\n        if (!attachment) {\n            attachment = attachmentDataForNote(note);\n        }\n        var fixEmbedUrlIfNeeded = function(url) {\n            return url.replace(/watch\\?v=/gi, '/embed/').replace(/youtu\\.be/, 'youtube.com/embed');\n        };\n\n        if (!getNoteTextForNote(note).html().length) {\n            elem.addClass('mod_board_notext');\n        } else {\n            elem.removeClass('mod_board_notext');\n        }\n\n        elem.removeClass('wrapper_youtube');\n        elem.removeClass('wrapper_image');\n        elem.removeClass('wrapper_url');\n        if (attachment.filename && parseInt(attachment.type) == ATTACHMENT_IMAGE) { // Before uploading\n            elem.html(`<img src=\"${attachment.filecontents}\" alt=\"${attachment.info}\"\n                class=\"mod_board_preview_element\"/>`);\n            elem.addClass('wrapper_image');\n            elem.show();\n        } else if (attachment.url) {\n            switch (parseInt(attachment.type)) {\n                case ATTACHMENT_VIDEO: // Youtube\n                    elem.html('<iframe src=\"' + fixEmbedUrlIfNeeded(attachment.url) +\n                    '\" class=\"mod_board_preview_element\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;' +\n                    'encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>');\n                    elem.addClass('wrapper_youtube');\n                    elem.show();\n                break;\n                case ATTACHMENT_IMAGE: // Image\n                    elem.html(`<img src=\"${attachment.url}\" alt=\"${attachment.info}\"\n                        class=\"mod_board_preview_element\"/>`);\n                    elem.addClass('wrapper_image');\n                    elem.show();\n                break;\n                case ATTACHMENT_LINK: // Url\n                    elem.html('<a href=\"' + attachment.url + '\" class=\"mod_board_preview_element\" target=\"_blank\">' +\n                             (attachment.info || attachment.url) + '</a>');\n                    elem.addClass('wrapper_url');\n                    elem.show();\n                break;\n                default:\n                    elem.html('');\n                    elem.hide();\n            }\n        } else {\n            elem.html('');\n            elem.hide();\n        }\n    };\n\n    /**\n     * Add a new note with the given information.\n     *\n     * @method addNote\n     * @param columnid\n     * @param ident\n     * @param heading\n     * @param content\n     * @param attachment\n     * @param owner\n     * @param sortorder\n     * @param rating\n     */\n    var addNote = function(columnid, ident, heading, content, attachment, owner, sortorder, rating) {\n        var ismynote = owner.id == userId || !ident;\n        var iseditable = isEditor || (ismynote && !isReadOnlyBoard);\n\n        if (!ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = $('<div class=\"board_note\" data-column=\"' + columnid + '\" data-ident=\"' + ident +\n            '\" data-sortorder=\"' + sortorder + '\"></div>');\n        if (ismynote) {\n            note.addClass('mod_board_mynote');\n        }\n        if (iseditable) {\n            note.addClass('mod_board_editablenote');\n        }\n\n        var notecontent = $('<div class=\"mod_board_note_content\"></div>'),\n            noteHeading = $('<div class=\"mod_board_note_heading\" tabindex=\"0\">' + (heading ? heading : '') + '</div>'),\n            noteBorder = $('<div class=\"mod_board_note_border\"></div>'),\n            noteText = $('<div class=\"mod_board_note_text\" tabindex=\"0\">' + (content ? content : '') + '</div>'),\n            noteAriaText = $('<div class=\"note_ariatext hidden\" role=\"heading\" aria-level=\"4\" tabindex=\"0\"></div>'),\n            attachmentPreview = $('<div class=\"mod_board_preview\"></div>');\n\n        notecontent.append(noteHeading);\n        notecontent.append(noteBorder);\n        notecontent.append(noteText);\n        notecontent.append(noteAriaText);\n\n        notecontent.append(attachmentPreview);\n        note.append(notecontent);\n\n        var columnContent = $('.board_column[data-ident=' + columnid + '] .board_column_content');\n\n        if (iseditable) {\n            var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_note\" role=\"button\" tabindex=\"0\"></div>');\n            handleAction(removeElement, function() {\n                deleteNote(ident);\n            });\n\n            if (!ident) {\n                removeElement.hide();\n            }\n            notecontent.append(removeElement);\n\n            var beginEdit = function() {\n                startNoteEdit(ident);\n            };\n\n            handleEditableAction(noteText, beginEdit);\n            handleEditableAction(noteHeading, beginEdit);\n            handleEditableAction(noteBorder, beginEdit);\n\n            setAttachment(note, attachment);\n        } else {\n            previewAttachment(note, attachment);\n        }\n\n        if (ident) {\n            if (ratingenabled) {\n                note.addClass('mod_board_rateablenote');\n                var rateElement = $('<div class=\"fa fa-star mod_board_rating\" role=\"button\" tabindex=\"0\">' + rating + '</div>');\n\n                handleAction(rateElement, function() {\n                    rateNote(ident);\n                });\n                notecontent.append(rateElement);\n            }\n\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n\n            var lastOne = columnContent.find(\".board_note\").last();\n\n            if (lastOne.length) {\n                note.insertAfter(lastOne);\n            } else {\n                columnContent.prepend(note);\n            }\n        } else {\n            $('.board_column[data-ident=' + columnid + '] .board_column_newcontent').append(note);\n            // This is effectively a note placeholder. So we don't need to show ot.\n            note.hide();\n            beginEdit();\n        }\n    };\n\n    /**\n     * Add a new column.\n     *\n     * @method addColumn\n     * @param ident\n     * @param name\n     * @param notes\n     */\n    var addColumn = function(ident, name, notes) {\n        var iseditable = isEditor,\n            nameCache = null,\n            column = $('<div class=\"board_column board_column_hasdata\" data-ident=\"' + ident + '\"></div>'),\n            columnHeader = $('<div class=\"board_column_header\"></div>'),\n            columnSort = $('<div class=\"mod_board_column_sort fa\"></div>'),\n            columnName = $('<div class=\"mod_board_column_name\" tabindex=\"0\" aria-level=\"3\" role=\"heading\">' + name + '</div>'),\n            columnContent = $('<div class=\"board_column_content\"></div>'),\n            columnNewContent = $('<div class=\"board_column_newcontent\"></div>');\n        columnHeader.append(columnSort);\n        columnHeader.append(columnName);\n\n        if (options.hideheaders) {\n            columnName.addClass('d-none');\n        }\n\n        columnSort.on('click', function() {\n            sortNotes(columnContent, true);\n        });\n\n        if (iseditable) {\n            column.addClass('mod_board_editablecolumn');\n\n            var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_column\" role=\"button\" tabindex=\"0\"></div>');\n            handleAction(removeElement, function() {\n                Notification.confirm(\n                    strings.remove_column_text.split(\". \")[1], // Are you sure?\n                    strings.remove_column_text.split(\". \")[0], // This will effect others.\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('delete_column', {id: ident}, function(result) {\n                            if (result.status) {\n                                column.remove();\n                                lastHistoryId = result.historyid;\n                            }\n                        });\n                    }\n                );\n            });\n\n            columnHeader.append(removeElement);\n        }\n\n        column.append(columnHeader);\n        column.append(columnContent);\n        column.append(columnNewContent);\n\n        if (iseditable) {\n            handleEditableAction(columnName, function() {\n                nameCache = columnName.html();\n            }, true);\n\n            columnName.editable({\n                toggleFontSize: false,\n                closeOnEnter: true,\n                callback: function(data) {\n                    if (data.content) {\n                        serviceCall('update_column', {id: ident, name: columnName.html()}, function(result) {\n                            if (!result.status) {\n                                columnName.html(nameCache);\n                                nameCache = null;\n                            } else {\n                                lastHistoryId = result.historyid;\n                                updateColumnAria(ident);\n                            }\n                        }, function() {\n                            columnName.html(nameCache);\n                            nameCache = null;\n                        });\n                    } else {\n                        columnName.html(nameCache);\n                        nameCache = null;\n                    }\n                }\n            });\n        }\n\n        if (!isReadOnlyBoard) {\n            columnNewContent.append('<div class=\"board_button newnote\" role=\"button\" tabindex=\"0\">' +\n            '<div class=\"button_content\"><span class=\"fa ' + options.noteicon + '\"></span></div></div>');\n\n            handleAction(columnNewContent.find('.newnote'), function() {\n                addNote(ident, 0, null, null, null, {id: userId}, 0, 0);\n            });\n        }\n\n        var lastOne = $(\".mod_board .board_column_hasdata\").last();\n        if (lastOne.length) {\n            column.insertAfter(lastOne);\n        } else {\n            $(\".mod_board\").append(column);\n        }\n\n        if (notes) {\n            for (var index in notes) {\n                addNote(ident, notes[index].id, notes[index].heading, notes[index].content,\n                    {type: notes[index].type, info: notes[index].info, url: notes[index].url},\n                    {id: notes[index].userid}, notes[index].timecreated, notes[index].rating);\n            }\n        }\n        sortNotes(columnContent);\n        updateColumnAria(ident);\n        if (isEditor) {\n            updateSortable();\n        }\n    };\n\n    /**\n     * Add the new column button.\n     *\n     * @method addNewColumnButton\n     */\n    var addNewColumnButton = function() {\n        var column = $('<div class=\"board_column board_column_empty\"></div>'),\n            newBusy = false;\n        column.append('<div class=\"board_button newcolumn\" role=\"button\" tabindex=\"0\" aria-label=\"' +\n            strings.aria_newcolumn + '\" title=\"' + strings.aria_newcolumn + '\"><div class=\"button_content\"><span class=\"fa '\n            + options.columnicon + '\"></span></div></div>');\n\n        handleAction(column.find('.newcolumn'), function() {\n            if (newBusy) {\n                return;\n            }\n            newBusy = true;\n\n            serviceCall('add_column', {boardid: board.id, name: strings.default_column_heading}, function(result) {\n                addColumn(result.id, strings.default_column_heading);\n                lastHistoryId = result.historyid;\n                newBusy = false;\n            }, function() {\n                newBusy = false;\n            });\n        });\n\n        $(\".mod_board\").append(column);\n    };\n\n    /**\n     * Update a note with the provided information.\n     *\n     * @method updateNote\n     * @param note\n     * @param heading\n     * @param data\n     */\n    var updateNote = function(note, heading, data) {\n        var noteHeading = getNoteHeadingForNote(note);\n        var noteText = getNoteTextForNote(note);\n        var noteBorder = getNoteBorderForNote(note);\n\n        noteText.html(data.content);\n        noteHeading.html(data.heading);\n        setAttachment(note, data.attachment);\n        updateNoteAria(data.id);\n\n        // Reset the visibility state.\n        noteHeading.show();\n        noteBorder.show();\n        noteText.show();\n        if (!noteHeading.html()) {\n            noteHeading.hide();\n            noteBorder.hide();\n        }\n        if (!noteText.html() && noteHeading.html()) {\n            noteText.hide();\n            noteBorder.hide();\n        }\n    };\n\n    /**\n     * Fetch and process the recent board history.\n     *\n     * @method processBoardHistory\n     */\n    var processBoardHistory = function() {\n        serviceCall('board_history', {id: board.id, since: lastHistoryId}, function(boardhistory) {\n            for (var index in boardhistory) {\n                var item = boardhistory[index];\n                if (item.boardid != board.id) {\n                    continue; // Hmm\n                }\n\n                var data = JSON.parse(item.content);\n                if (item.action == 'add_note') {\n                    addNote(data.columnid, data.id, data.heading, data.content, data.attachment,\n                        {id: item.userid}, data.timecreated, data.rating);\n                    updateNoteAria(data.id);\n                    sortNotes($('.board_column[data-ident=' + data.columnid + '] .board_column_content'));\n                } else if (item.action == 'update_note') {\n                    let note = getNote(data.id),\n                        formModal = editModal,\n                        historyData = data;\n                    if (note) {\n                        let noteHeading = getNoteHeadingForNote(note);\n\n                        if (editingNote == data.id) {\n                            Notification.confirm(\n                                strings.note_changed_text.split(\"\\n\")[0], // Confirm.\n                                strings.note_changed_text.split(\"\\n\")[1], // Are you sure?\n                                strings.Ok,\n                                strings.Cancel,\n                                function() {\n                                    formModal.hide();\n                                    updateNote(note, noteHeading, historyData);\n                                    stopNoteEdit();\n                                }\n                            );\n                        } else {\n                            updateNote(note, noteHeading, data);\n                        }\n                    }\n                } else if (item.action == 'delete_note') {\n                    if (editingNote == data.id) {\n                        Notification.alert(strings.warning, strings.note_deleted_text);\n                        stopNoteEdit();\n                    }\n                    getNote(data.id).remove();\n\n                } else if (item.action == 'add_column') {\n                    addColumn(data.id, data.name);\n                } else if (item.action == 'update_column') {\n                    $(\".board_column[data-ident='\" + data.id + \"'] .mod_board_column_name\").html(data.name);\n                    updateColumnAria(data.id);\n                } else if (item.action == 'delete_column') {\n                    var column = $(\".board_column[data-ident='\" + data.id + \"']\");\n                    if (editingNote && column.find('.board_note[data-ident=\"' + editingNote + '\"]').length) {\n                        stopNoteEdit();\n                    }\n                    column.remove();\n                } else if (item.action == 'rate_note') {\n                    var note = getNote(data.id);\n                    note.find('.mod_board_rating').html(data.rating);\n                    if (sortby == SORTBY_RATING) {\n                        sortNotes(note.closest('.board_column_content'));\n                    }\n                }\n                lastHistoryId = item.id;\n            }\n\n            updateBoard();\n        });\n    };\n\n    /**\n     * Trigger a board update.\n     *\n     * @method updateBoard\n     * @param instant\n     */\n    var updateBoard = function(instant) {\n        if (instant) {\n            processBoardHistory();\n        } else if (options.history_refresh > 0) {\n            if (reloadTimer) {\n                stopUpdating();\n            }\n            reloadTimer = setTimeout(processBoardHistory, options.history_refresh * 1000);\n        }\n    };\n\n    /**\n     * Stop/prevent the board reload timer from firing.\n     *\n     * @method stopUpdating\n     */\n    var stopUpdating = function() {\n        clearTimeout(reloadTimer);\n        reloadTimer = null;\n    };\n\n    /**\n     * Sort a set of notes.\n     *\n     * @sortNotes\n     * @param content\n     * @param toggle\n     */\n    var sortNotes = function(content, toggle) {\n        var sortCol = $(content).parent().find('.mod_board_column_sort'),\n            direction = $(content).data('sort');\n        if (!direction) {\n            if (sortby == SORTBY_RATING) {\n                direction = 'desc';\n            } else {\n                direction = 'asc';\n            }\n        }\n        if (toggle) {\n            direction = direction == 'asc' ? 'desc' : 'asc';\n        }\n\n        if (direction == 'asc') {\n            sortCol.removeClass('fa-angle-down');\n            sortCol.addClass('fa-angle-up');\n        } else {\n            sortCol.removeClass('fa-angle-up');\n            sortCol.addClass('fa-angle-down');\n        }\n        $(content).data('sort', direction);\n\n        var desc,\n            asc;\n        if (sortby == SORTBY_DATE) {\n            desc = function(a, b) {\n                return $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        } else {\n            desc = function(a, b) {\n                return $(b).find('.mod_board_rating').text() - $(a).find('.mod_board_rating').text() ||\n                $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).find('.mod_board_rating').text() - $(b).find('.mod_board_rating').text() ||\n                $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        }\n\n        $('> .board_note', $(content)).sort(direction === 'asc' ? asc : desc).appendTo($(content));\n\n    };\n\n    /**\n     * Update sorting of sortable content.\n     *\n     * @method updateSortable\n     */\n    var updateSortable = function() {\n        $(\".board_column_content\").sortable({\n            connectWith: \".board_column_content\",\n            stop: function(e, ui) {\n                var note = $(ui.item),\n                    tocolumn = note.closest('.board_column'),\n                    columnid = tocolumn.data('ident'),\n                    elem = $(this);\n\n                serviceCall('move_note', {id: note.data('ident'), columnid: columnid}, function(result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        updateNoteAria(note.data('ident'));\n                        sortNotes($('.board_column[data-ident=' + columnid + '] .board_column_content'));\n                    } else {\n                        elem.sortable('cancel');\n                    }\n                });\n            }\n        });\n    };\n\n    /**\n     * Get the body fragment for the modal form.\n     *\n     * @param noteid\n     * @param columnid\n     * @returns {Deferred|*}\n     */\n    var getBody = function(noteid, columnid) {\n        // Get the content of the modal.\n        var params = {noteid: noteid, columnid: columnid};\n        return Fragment.loadFragment('mod_board', 'note_form', contextid, params);\n    };\n\n    /**\n     * Setup the aria labels for the modal.\n     *\n     * @param note\n     * @param modal\n     */\n    var updateModalAria = function(note, modal) {\n        let columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text(),\n            addYoutube,\n            addImage,\n            addLink,\n            postButton,\n            cancelButton,\n            modalRoot = modal.getRoot();\n\n        if (note.data('ident')) {\n            // Is a note update.\n            var noteIdentifier = textIdentifierForNote(note);\n\n            postButton = strings.aria_postedit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            cancelButton = strings.aria_canceledit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            addYoutube = strings.aria_addmedia.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addImage = strings.aria_addmedia.replace('{type}', strings.option_image).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addLink = strings.aria_addmedia.replace('{type}', strings.option_link).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n        } else {\n            // Note is new.\n            postButton = strings.aria_postnew.replace('{column}', columnIdentifier);\n            cancelButton = strings.aria_cancelnew.replace('{column}', columnIdentifier);\n            addYoutube = strings.aria_addmedianew.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier);\n            addImage = strings.aria_addmedianew.replace('{type}', strings.option_image).replace('{column}', columnIdentifier);\n            addLink = strings.aria_addmedianew.replace('{type}', strings.option_link).replace('{column}', columnIdentifier);\n        }\n\n        if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('aria-label', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('title', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('aria-label', addImage);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('title', addImage);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('aria-label', addLink);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('title', addLink);\n        }\n\n        let button = modalRoot.find(modal.getActionSelector('save'));\n        if (button) {\n            button.attr('aria-label', postButton);\n        }\n        button = modalRoot.find(modal.getActionSelector('cancel'));\n        if (button) {\n            button.attr('aria-label', cancelButton);\n        }\n    };\n\n    /**\n     * Displays the modal form to edit a note.\n     *\n     * @param note\n     */\n    var showModalForm = function(note) {\n        let noteId = 0,\n            columnId = note.data('column'),\n            column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            title;\n\n        if (note.data('ident')) {\n            noteId = note.data('ident');\n            title = strings.modal_title_edit.replace('{column}', columnIdentifier);\n        } else {\n            title = strings.modal_title_new.replace('{column}', columnIdentifier);\n        }\n\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: getBody(noteId, columnId),\n            large: true,\n            removeOnClose: true\n        }).then(function(modal) {\n            // Use the body promise so we know body content is loaded.\n            modal.getBodyPromise().then(function () {\n                let saveInProgress = false;\n                editModal = modal;\n                modal.setLarge();\n                modal.setSaveButtonText(strings.post_button_text);\n                modal.setButtonText('cancel', strings.cancel_button_text);\n\n                modal.getRoot().on(ModalEvents.hidden, function () {\n                    stopNoteEdit();\n                    if (!note.data('ident')) {\n                        note.remove();\n                    }\n                });\n\n                modal.getRoot().on(ModalEvents.save, function (e) {\n                    e.preventDefault();\n                    modal.getRoot().find('form').submit();\n                });\n\n                var changeEvent = document.createEvent('HTMLEvents');\n                changeEvent.initEvent('change', true, true);\n\n                modal.getRoot().on('submit', 'form', function (e) {\n                    e.preventDefault();\n\n                    // Prevent multiple form submissions from being sent.\n                    if (saveInProgress) {\n                        return;\n                    }\n                    saveInProgress = true;\n\n                    // First, make sure the native html5 validity checks are run.\n                    let valid = modal.getRoot().find('form').get(0).reportValidity();\n                    if (!valid) {\n                        return;\n                    }\n\n                    // Prompt all inputs to run their validation functions.\n                    // Normally this would happen when the form is submitted, but\n                    // since we aren't submitting the form normally we need to run client side\n                    // validation.\n                    modal.getRoot().find(':input').each(function (index, element) {\n                        element.dispatchEvent(changeEvent);\n                    });\n\n                    // Now the change events have run, see if there are any \"invalid\" form fields.\n                    var invalid = $.merge(\n                        modal.getRoot().find('[aria-invalid=\"true\"]'),\n                        modal.getRoot().find('.error'),\n                        modal.getRoot().find(':invalid')\n                    );\n\n                    // If we found invalid fields, focus on the first one and do not submit via ajax.\n                    if (invalid.length) {\n                        invalid.first().focus();\n                        return;\n                    }\n\n                    var formData = JSON.stringify(modal.getRoot().find('form').serialize());\n                    serviceCall('submit_form', {contextid: contextid, jsonformdata: formData}, function (result) {\n                        if (result.status) {\n                            if (result.action == 'insert') {\n                                // Added a new note.\n                                lastHistoryId = result.historyid;\n                                note.remove();\n                                addNote(columnId, result.note.id, result.note.heading, result.note.content,\n                                    {type: result.note.type, info: result.note.info, url: result.note.url},\n                                    {id: result.note.userid}, result.note.timecreated, result.note.rating);\n                                sortNotes($('.board_column[data-ident=' + columnId + '] .board_column_content'));\n                                updateNoteAria(result.note.id);\n                            } else {\n                                // Updated existing note.\n                                lastHistoryId = result.historyid;\n                                getNoteTextForNote(note).html(result.note.content);\n                                getNoteHeadingForNote(note).html(result.note.heading);\n                                updateNoteAria(result.note.id);\n                                setAttachment(note, {\n                                    type: result.note.type,\n                                    info: result.note.info, url: result.note.url\n                                });\n                            }\n                            stopNoteEdit();\n\n                            // Clear the form changed checker.\n                            Y.use('moodle-core-formchangechecker', function() {\n                                M.core_formchangechecker.reset_form_dirty_state();\n                            });\n\n                            modal.destroy();\n                        } else {\n                            // TODO show error.\n                        }\n                    });\n\n                });\n\n                if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                    // First hide the select menu.\n                    modal.getRoot().find('#fitem_id_mediatype').hide();\n\n                    let mediaSelect = modal.getRoot().find('#fitem_id_mediatype select'),\n                        ytButton = modal.getRoot().find('.mod_board_attachment_button.youtube_button'),\n                        pictureButton = modal.getRoot().find('.mod_board_attachment_button.image_button'),\n                        linkButton = modal.getRoot().find('.mod_board_attachment_button.link_button'),\n                        updateMediaButtons = function() {\n                            ytButton.removeClass('selected');\n                            pictureButton.removeClass('selected');\n                            linkButton.removeClass('selected');\n                            switch (mediaSelect.val()) {\n                                case (\"1\"):\n                                    ytButton.addClass('selected');\n                                    break;\n                                case (\"2\"):\n                                    pictureButton.addClass('selected');\n                                    break;\n                                case (\"3\"):\n                                    linkButton.addClass('selected');\n                                    break;\n                            }\n                        };\n\n                    updateMediaButtons();\n                    handleAction(ytButton, function() {\n                        if (mediaSelect.val() === \"1\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(1);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    handleAction(pictureButton, function() {\n                        if (mediaSelect.val() === \"2\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(2);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    handleAction(linkButton, function() {\n                        if (mediaSelect.val() === \"3\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(3);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                } else {\n                    modal.getRoot().find('#fitem_id_mediabuttons').hide();\n                }\n\n                updateModalAria(note, modal);\n                modal.show();\n\n                return modal;\n            });\n            return modal;\n        });\n    };\n\n    /**\n     * Initialize board.\n     *\n     * @method init\n     */\n    var init = function() {\n        serviceCall('get_board', {id: board.id}, function(columns) {\n            // Init\n            if (columns) {\n                for (var index in columns) {\n                    addColumn(columns[index].id, columns[index].name, columns[index].notes || {});\n                }\n            }\n\n            if (isEditor) {\n                addNewColumnButton();\n            }\n\n            lastHistoryId = board.historyid;\n\n            if (isEditor) {\n                updateSortable();\n            }\n\n            updateBoard();\n        });\n    };\n\n    // Get strings\n    var stringsInfo = [];\n    for (var string in strings) {\n        stringsInfo.push({key: string, component: 'mod_board'});\n    }\n\n    $.when(getStrings(stringsInfo)).done(function(results) {\n        var index = 0;\n        for (string in strings) {\n            strings[string] = results[index++];\n        }\n\n        init();\n    });\n}\n"],"file":"board.min.js"}